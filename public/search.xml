<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>新服务器安装docker并配置宝塔面板</title>
      <link href="/2022/09/01/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85docker%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/"/>
      <url>/2022/09/01/%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85docker%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前两天看到华为云有个服务器优惠活动，50块就可以买一个1核2G的服务器。我阿里云的服务器是2核2G的，折腾到现在，配置已经有点不够用了，趁着这次活动就买了一个华为云的服务器。</p><p>一年前自己还是个小萌新，阿里云的宝塔面板还是用的公共镜像帮装好的。随着技术的成长，在Linux上直接安装的宝塔面板让我觉得软件环境有点乱，在做博客项目升级的时候渐渐接触到docker，宝塔对主机控制度较高，依赖关系复杂，而 Docker 可以保证宝塔服务不影响到宿主机其他服务。认识到docker的方便之后，这个新的服务器自然得先装docker再装宝塔啦。</p><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><p>官网提示如果要安装 Docker Engine，您需要一个 CentOS 7 以及以上的稳定版本。</p><ol><li>查看centos系统内核版本</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# uname -a</span><br><span class="line">Linux ecs-21523 3.10.0-1160.53.1.el7.x86_64 #1 SMP Fri Jan 14 13:59:45 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure><ol start="2"><li>先确定是否 Centos 7及以上的版本</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure><h2 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h2><p>有比较旧的版本可以先卸载。较旧的 Docker 版本为 docker 或 docker-engine。 如果已安装这些程序，请卸载它们以及相关的依赖项。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><h2 id="检查是否能够上外网"><a href="#检查是否能够上外网" class="headerlink" title="检查是否能够上外网"></a>检查是否能够上外网</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# ping lotlyz.cn</span><br><span class="line">PING lotlyz.cn (120.79.182.135) 56(84) bytes of data.</span><br><span class="line">64 bytes from 120.79.182.135 (120.79.182.135): icmp_seq=1 ttl=48 time=10.1 ms</span><br><span class="line">64 bytes from 120.79.182.135 (120.79.182.135): icmp_seq=2 ttl=48 time=9.96 ms</span><br><span class="line">64 bytes from 120.79.182.135 (120.79.182.135): icmp_seq=3 ttl=48 time=10.0 ms</span><br><span class="line">64 bytes from 120.79.182.135 (120.79.182.135): icmp_seq=4 ttl=48 time=9.99 ms</span><br></pre></td></tr></table></figure><h2 id="安装软件组"><a href="#安装软件组" class="headerlink" title="安装软件组"></a>安装软件组</h2><p>安装所需的基础软件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# yum -y install tree nmap sysstat lrzsz dos2unix telnet bash-completion bash-completion-extras vim lsof net-tools rsync ntpdate nfs-utils wget</span><br><span class="line"></span><br><span class="line">[root@ecs-21523 ~]# curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100  2523  100  2523    0     0  10180      0 --:--:-- --:--:-- --:--:-- 10173</span><br></pre></td></tr></table></figure><h2 id="设置yum源"><a href="#设置yum源" class="headerlink" title="设置yum源"></a>设置yum源</h2><p>安装 yum-utils 软件包（提供了 yum-config-manager 程序）并设置稳定的 yum 源方便下载 Docker Engine。</p><ol><li>备份yum源</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>下载新的 CentOS-Base.repo 到 /etc/yum.repos.d/<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">--2022-05-24 22:32:18--  https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">Resolving mirrors.aliyun.com (mirrors.aliyun.com)... 202.100.222.209, 124.225.134.248, 124.225.134.240, ...</span><br><span class="line">Connecting to mirrors.aliyun.com (mirrors.aliyun.com)|202.100.222.209|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 2523 (2.5K) [application/octet-stream]</span><br><span class="line">Saving to: ‘/etc/yum.repos.d/CentOS-Base.repo’</span><br><span class="line"></span><br><span class="line">100%[===========================================================================================&gt;] 2,523       --.-K/s   in 0s      </span><br><span class="line"></span><br><span class="line">2022-05-24 22:32:18 (605 MB/s) - ‘/etc/yum.repos.d/CentOS-Base.repo’ saved [2523/2523]</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>3.添加Docker Engine软件源信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 安装 yum-utils</span><br><span class="line">sudo yum install -y yum-utils</span><br><span class="line"># 设置 yum 源为阿里云方便下载 Docker Engine</span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h2 id="yum-安装-gcc-相关"><a href="#yum-安装-gcc-相关" class="headerlink" title="yum 安装 gcc 相关"></a>yum 安装 gcc 相关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# yum -y install gcc gcc-c++</span><br></pre></td></tr></table></figure><h2 id="刷新-yum-源缓存"><a href="#刷新-yum-源缓存" class="headerlink" title="刷新 yum 源缓存"></a>刷新 yum 源缓存</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# yum makecache</span><br></pre></td></tr></table></figure><h2 id="为了方便我们可以更新一下系统"><a href="#为了方便我们可以更新一下系统" class="headerlink" title="为了方便我们可以更新一下系统"></a>为了方便我们可以更新一下系统</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# yum update</span><br><span class="line">[root@ecs-21523 ~]# yum update -y --exclud=kernel*</span><br></pre></td></tr></table></figure><h2 id="安装需要的软件包"><a href="#安装需要的软件包" class="headerlink" title="安装需要的软件包"></a>安装需要的软件包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h2 id="更新-yum-软件包索引"><a href="#更新-yum-软件包索引" class="headerlink" title="更新 yum 软件包索引"></a>更新 yum 软件包索引</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure><h2 id="安装-Docker-ce"><a href="#安装-Docker-ce" class="headerlink" title="安装 Docker-ce"></a>安装 Docker-ce</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install docker-ce</span><br></pre></td></tr></table></figure><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p> 官方软件源默认启用了最新的软件，可以通过编辑软件源的方式获取各个版本的软件包。</p><h2 id="安装完毕后启动"><a href="#安装完毕后启动" class="headerlink" title="安装完毕后启动"></a>安装完毕后启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# sudo service docker start</span><br><span class="line">Redirecting to /bin/systemctl start docker.service</span><br></pre></td></tr></table></figure><h2 id="设置为开机自启动"><a href="#设置为开机自启动" class="headerlink" title="设置为开机自启动"></a>设置为开机自启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# systemctl enable --now docker</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br><span class="line"># 检查是否为开机自启</span><br><span class="line">[root@ecs-21523 ~]# systemctl is-enabled docker</span><br><span class="line">enabled</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="安装校验"><a href="#安装校验" class="headerlink" title="安装校验"></a>安装校验</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 ~]# docker -v</span><br><span class="line">Docker version 19.03.14, build 5eb3275d40</span><br><span class="line"></span><br><span class="line">[root@ecs-21523 ~]# docker version</span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           20.10.16</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.17.10</span><br><span class="line"> Git commit:        aa7e414</span><br><span class="line"> Built:             Thu May 12 09:19:45 2022</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      true</span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          20.10.16</span><br><span class="line">  API version:      1.41 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.17.10</span><br><span class="line">  Git commit:       f756502</span><br><span class="line">  Built:            Thu May 12 09:18:08 2022</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     false</span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.6.4</span><br><span class="line">  GitCommit:        212e8b6fa2f44b9c21b2798135fc6fb7c53efc16</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.1.1</span><br><span class="line">  GitCommit:        v1.1.1-0-g52de29d</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br></pre></td></tr></table></figure><h1 id="附：常用docker命令"><a href="#附：常用docker命令" class="headerlink" title="附：常用docker命令"></a>附：常用docker命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 启动 docker</span><br><span class="line">sudo systemctl start docker</span><br><span class="line"># 停止 docker</span><br><span class="line">sudo systemctl stop docker</span><br><span class="line"># 重启 docker</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line"># 设置开机启动</span><br><span class="line">sudo systemctl enable docker</span><br><span class="line"># 查看 docker 状态</span><br><span class="line">sudo systemctl status docker</span><br><span class="line"># 查看 docker 内容器的运行状态</span><br><span class="line">sudo docker stats</span><br><span class="line"># 查看 docker 概要信息</span><br><span class="line">sudo docker info</span><br><span class="line"># 查看 docker 帮助文档</span><br><span class="line">sudo docker --help</span><br><span class="line"># 卸载docker</span><br><span class="line">yum -y remove docker-ce</span><br><span class="line"># 强制卸载docker</span><br><span class="line">rm -rf /var/lib/docker</span><br><span class="line"></span><br><span class="line">docker pull xx       //下载镜像</span><br><span class="line">docker rmi xx       //删除镜像</span><br><span class="line">docker run xx       //运行容器</span><br><span class="line">docker exec -it xx /bin/bash  //进入容器</span><br><span class="line">docker rm xx        //删除容器</span><br><span class="line">docker stop xx     //停止容器</span><br><span class="line">docker restart xx  //重启容器</span><br><span class="line">docker rename 原名 改后名  //更改容器别名</span><br></pre></td></tr></table></figure><h1 id="安装宝塔镜像"><a href="#安装宝塔镜像" class="headerlink" title="安装宝塔镜像"></a>安装宝塔镜像</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -tid --name baota --net=host --privileged=true --shm-size=1g --restart always -v baota_www:/www -v ~/wwwroot:/www/wwwroot pch18/baota</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><ul><li>  /www/wwwroot 挂载在宿主机的 ~/wwwroot 目录</li><li>  /www 挂载在 baota_www volume，即 /var/lib/docker/volumes/baota_www/ </li></ul><h2 id="登录方式"><a href="#登录方式" class="headerlink" title="登录方式"></a>登录方式</h2><p>登陆地址：http://:8888</p><p>初始账号：username</p><p>初始密码：password</p><p>注意：安装成功后需要修改登录用户和密码才能正常访问</p><h2 id="宝塔面板命令行"><a href="#宝塔面板命令行" class="headerlink" title="宝塔面板命令行"></a>宝塔面板命令行</h2><p>进入容器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it baota bash</span><br></pre></td></tr></table></figure><p>命令行输入bt 可对宝塔面板进行交互式操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-21523 wwwroot]# bt</span><br><span class="line">===============宝塔面板命令行==================</span><br><span class="line">(1) 重启面板服务           (8) 改面板端口</span><br><span class="line">(2) 停止面板服务           (9) 清除面板缓存</span><br><span class="line">(3) 启动面板服务           (10) 清除登录限制</span><br><span class="line">(4) 重载面板服务</span><br><span class="line">(5) 修改面板密码           (12) 取消域名绑定限制</span><br><span class="line">(6) 修改面板用户名         (13) 取消IP访问限制</span><br><span class="line">(7) 强制修改MySQL密码      (14) 查看面板默认信息</span><br><span class="line">(22) 显示面板错误日志      (15) 清理系统垃圾</span><br><span class="line">(23) 关闭BasicAuth认证     (16) 修复面板(检查错误并更新面板文件到最新版)</span><br><span class="line">(24) 关闭动态口令认证          (17) 设置日志切割是否压缩</span><br><span class="line">(25) 设置是否保存文件历史副本  (18) 设置是否自动备份面板</span><br><span class="line">(0) 取消                   (29) 取消访问设备验证</span><br><span class="line">===============================================</span><br><span class="line">请输入命令编号：</span><br></pre></td></tr></table></figure><h4 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h4><ol><li>安装完宝塔面板忘记保存面板ip地址的话，可以bt执行第14条命令，看到Bt-Panel-URL属性，这个就是登录宝塔面板的地址</li><li>登录面板后，请立即修改面板用户和面板密码，并建议修改面板端口和安全入口。</li><li>更新的话，可以使用面板提供的更新功能。</li></ol>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python标准库turtle画了一颗树</title>
      <link href="/2022/08/01/%E4%BD%BF%E7%94%A8Python%E6%A0%87%E5%87%86%E5%BA%93turtle%E7%94%BB%E4%BA%86%E4%B8%80%E9%A2%97%E6%A0%91/"/>
      <url>/2022/08/01/%E4%BD%BF%E7%94%A8Python%E6%A0%87%E5%87%86%E5%BA%93turtle%E7%94%BB%E4%BA%86%E4%B8%80%E9%A2%97%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天的Python课讲到第八章Python计算生态。</p><p>Python诞生至今，由于其简洁性，易读性，可拓展性，以及开源模式，Python官方和广大用户一起建立起了以标准库和第三方库为代表的大规模编程计算生态，可以说是相当的强大。</p><p>课后胡老师给我们留了作业，要用turtle库画一颗树</p><p><img src="http://lotlyzbolg.oss-cn-shenzhen.aliyuncs.com/articles/fa2b5f567e255f3dc2e4a9b3de86576a.png" alt="QQ截图20220525022350.png"></p><p>就是类似这样的</p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p>一开始我画的并不好，各种奇形怪状的图案，可惜了没有截图，随着代码的修改完善，那些画成奇怪图案的代码被优化后就不存在了。</p><p>交作业后老师在课堂上说我写的代码挺好的，之后有同学来问我要源码</p><p>下面就直接放最后交作业的代码了</p><h3 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">import turtle</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">Python 3.10.0</span><br><span class="line">@Author：Liyezhi</span><br><span class="line">@Date：2022-05-12</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">turtle.screensize(500, 500, &quot;black&quot;)</span><br><span class="line"># 2 设置画笔属性</span><br><span class="line">turtle.pensize(2)</span><br><span class="line">turtle.pencolor(&quot;white&quot;)</span><br><span class="line">turtle.speed(15)</span><br><span class="line"></span><br><span class="line"># 画树的左边</span><br><span class="line">def drawLeft(n, sideLength, inSideLength, bladeLength):</span><br><span class="line">    # （为了使图像位于画布中心）设置偏移量</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(0, 360)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    for i in range(n):</span><br><span class="line"></span><br><span class="line">        # 制造锯齿纹理</span><br><span class="line">        j = 0</span><br><span class="line">        while j &lt;= sideLength:</span><br><span class="line">            turtle.seth(225)</span><br><span class="line">            turtle.right(45)</span><br><span class="line">            turtle.forward(bladeLength)</span><br><span class="line">            turtle.left(90)</span><br><span class="line">            turtle.forward(bladeLength)</span><br><span class="line">            # 求等腰三角行锯齿的底边长</span><br><span class="line">            length = pow(bladeLength * bladeLength + bladeLength * bladeLength, 0.5)</span><br><span class="line">            j = j + length</span><br><span class="line"></span><br><span class="line">        turtle.seth(10)</span><br><span class="line">        turtle.forward(inSideLength)</span><br><span class="line">        sideLength = sideLength + 25</span><br><span class="line">        inSideLength = inSideLength + 15</span><br><span class="line"></span><br><span class="line"># 画树的右边</span><br><span class="line">def drawRight(n, sideLength, inSideLength, bladeLength):</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(0, 360)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    for i in range(n):</span><br><span class="line">        j = 0</span><br><span class="line">        while j &lt;= sideLength:</span><br><span class="line">            turtle.seth(315)</span><br><span class="line">            turtle.left(45)</span><br><span class="line">            turtle.forward(bladeLength)</span><br><span class="line">            turtle.right(90)</span><br><span class="line">            turtle.forward(bladeLength)</span><br><span class="line">            length = pow(bladeLength * bladeLength + bladeLength * bladeLength, 0.5)</span><br><span class="line">            j = j + length</span><br><span class="line"></span><br><span class="line">        turtle.seth(170)</span><br><span class="line">        turtle.forward(inSideLength)</span><br><span class="line">        sideLength = sideLength + 25</span><br><span class="line">        inSideLength = inSideLength + 15</span><br><span class="line"></span><br><span class="line"># 画左树底部</span><br><span class="line">def drawLeftBottom():</span><br><span class="line">    #获取海龟当前的x,y轴坐标</span><br><span class="line">    x = turtle.xcor()</span><br><span class="line">    y = turtle.ycor()</span><br><span class="line"></span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(x, y)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.seth(200)</span><br><span class="line">    turtle.forward(66)</span><br><span class="line">    turtle.seth(10)</span><br><span class="line">    turtle.forward(88)</span><br><span class="line">    turtle.seth(0)</span><br><span class="line">    turtle.forward(10)</span><br><span class="line">    turtle.seth(200)</span><br><span class="line">    turtle.forward(36)</span><br><span class="line">    turtle.seth(5)</span><br><span class="line">    turtle.forward(88)</span><br><span class="line"></span><br><span class="line"># 画右树底部</span><br><span class="line">def drawRightBottom():</span><br><span class="line">    x = turtle.xcor()</span><br><span class="line">    y = turtle.ycor()</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(x, y)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.seth(340)</span><br><span class="line">    turtle.forward(66)</span><br><span class="line">    turtle.seth(170)</span><br><span class="line">    turtle.forward(88)</span><br><span class="line">    turtle.seth(180)</span><br><span class="line">    turtle.forward(10)</span><br><span class="line">    turtle.seth(340)</span><br><span class="line">    turtle.forward(36)</span><br><span class="line">    turtle.seth(175)</span><br><span class="line">    turtle.forward(88)</span><br><span class="line"></span><br><span class="line"># 画树根</span><br><span class="line">def drawTreeRoot():</span><br><span class="line">    x = turtle.xcor()</span><br><span class="line">    y = turtle.ycor()</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(x - 20, y)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.seth(270)</span><br><span class="line">    turtle.forward(66)</span><br><span class="line">    y2 = turtle.ycor()</span><br><span class="line">    turtle.sety(y2+10)</span><br><span class="line">    turtle.circle(25)</span><br><span class="line">    turtle.seth(0)</span><br><span class="line">    turtle.sety(y2)</span><br><span class="line">    turtle.forward(50)</span><br><span class="line">    turtle.seth(90)</span><br><span class="line">    turtle.forward(66)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    # 树冠</span><br><span class="line">    # 设置填充树内部的颜色</span><br><span class="line">    turtle.fillcolor(&quot;#7aa589&quot;)</span><br><span class="line">    turtle.begin_fill()</span><br><span class="line">    drawLeft(8, 25, 15, 4)</span><br><span class="line">    drawLeftBottom()</span><br><span class="line">    turtle.setx(0)</span><br><span class="line">    drawRight(8, 25, 15, 4)</span><br><span class="line">    drawRightBottom()</span><br><span class="line">    turtle.setx(0)</span><br><span class="line">    turtle.end_fill()</span><br><span class="line">    # 树根</span><br><span class="line">    # 设置填充树跟的颜色</span><br><span class="line">    turtle.fillcolor(&quot;#ab987f&quot;)</span><br><span class="line">    turtle.begin_fill()</span><br><span class="line">    #换笔色</span><br><span class="line">    turtle.pencolor(&quot;#ab987f&quot;)</span><br><span class="line">    drawTreeRoot()</span><br><span class="line">    turtle.end_fill()</span><br><span class="line"></span><br><span class="line">    # 画完将海龟箭头隐藏起来</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    # 保持窗口</span><br><span class="line">    turtle.done()</span><br></pre></td></tr></table></figure><h3 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h3><p><img src="http://lotlyzbolg.oss-cn-shenzhen.aliyuncs.com/articles/33c940a4e1ac4a8debe1a64bc621b671.png" alt="U652JGYS2TI7SCNFN.png"></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这个作业真的很好玩，期间会遇到一些有趣的问题。我的画图思路是先画左半边树冠，然后画右半边树冠，最后画出树根，从一开始左边树画的角度不知道在哪里，而且边是直线的，当时并没有等腰三角形的小锯齿，然后就是左边和右边不等高啊、填充的颜色并没有把树内部都填充完啊、树根画到了树冠中啊等等问题，看着画出来的四不像，把自己都给整笑了，可能这也是编程的一种乐趣吧。我觉得写代码和写文章一样，不论是好的文章还是好的代码，其实都是修改出来的。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 格式练习</title>
      <link href="/2022/07/01/Markdown-%E6%A0%BC%E5%BC%8F%E7%BB%83%E4%B9%A0/"/>
      <url>/2022/07/01/Markdown-%E6%A0%BC%E5%BC%8F%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="测试如何写文章"><a href="#测试如何写文章" class="headerlink" title="测试如何写文章"></a>测试如何写文章</h1><h2 id="你好Lotlyz"><a href="#你好Lotlyz" class="headerlink" title="你好Lotlyz!"></a>你好Lotlyz!</h2><h3 id="欢迎来到我的小世界"><a href="#欢迎来到我的小世界" class="headerlink" title="欢迎来到我的小世界"></a>欢迎来到我的小世界</h3><h4 id="去尝试吧"><a href="#去尝试吧" class="headerlink" title="去尝试吧"></a>去尝试吧</h4><h5 id="无论做什么"><a href="#无论做什么" class="headerlink" title="无论做什么"></a>无论做什么</h5><h6 id="道阻且长，行则将至！"><a href="#道阻且长，行则将至！" class="headerlink" title="道阻且长，行则将至！"></a>道阻且长，行则将至！</h6><h2 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h2><hr><hr><hr><h2 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h2><p><strong>This is bold text</strong></p><p><strong>This is bold text</strong></p><p><em>This is italic text</em></p><p><em>This is italic text</em></p><p><del>Strikethrough</del></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>无序</p><ul><li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li><li>Sub-lists are made by indenting 2 spaces:<ul><li>Marker character change forces new list start:<ul><li>Ac tristique libero volutpat at</li></ul><ul><li>Facilisis in pretium nisl aliquet</li></ul><ul><li>Nulla volutpat aliquam velit</li></ul></li></ul></li><li>Very easy!</li></ul><p>有序</p><ol><li>Lorem ipsum dolor sit amet</li><li>Consectetur adipiscing elit</li><li>Integer molestie lorem at massa</li></ol><ol><li>You can use sequential numbers…</li><li>…or keep all the numbers as <code>1.</code></li></ol><p>Start numbering with offset:</p><ol start="57"><li>foo</li><li>bar</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>Markdown 代码<br>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：</p><p><code>printf()</code> 函数</p><p>代码区块<br>代码区块使用 4 个空格或者一个制表符（Tab 键）。</p><p>你也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）</p><p>Inline <code>code</code><br>代码区块<br>代码区块使用 4 个空格或者一个制表符（Tab 键）。<br>Indented code</p><pre><code>// Some commentsline 1 of codeline 2 of codeline 3 of code</code></pre><p>Block code “fences”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sample text here...</span><br></pre></td></tr></table></figure><p>Syntax highlighting</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = <span class="keyword">function</span> (<span class="params">bar</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> bar++;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">foo</span>(<span class="number">5</span>));</span><br></pre></td></tr></table></figure><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p><p>语法格式如下：<br>|  表头   | 表头  |<br>|  —-  | —-  |<br>| 单元格  | 单元格 |<br>| 单元格  | 单元格 |</p><p>对齐方式</p><p>我们可以设置表格的对齐方式：</p><p>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><p>\   反斜线<br>`   反引号<br>*   星号<br>_   下划线<br>{}  花括号<br>[]  方括号<br>()  小括号<br>#   井字号<br>+   加号<br>-   减号<br>.   英文句点<br>!   感叹号</p><h2 id="Markdown-图片语法格式如下："><a href="#Markdown-图片语法格式如下：" class="headerlink" title="Markdown 图片语法格式如下："></a>Markdown 图片语法格式如下：</h2><p>![alt 属性文本](图片地址)</p><p>![alt 属性文本](图片地址 “可选标题”)<br>开头一个感叹号 !<br>接着一个方括号，里面放上图片的替代文字<br>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</p><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <img> 标签。</p><img src="http://lotlyzbolg.oss-cn-shenzhen.aliyuncs.com/img/top-img/cddd16cfd8de49938e68a21df7318172.jpg" width="50%">]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
